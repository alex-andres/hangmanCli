{"version":3,"sources":["../game/hangmanCli.js"],"names":["inquirer","require","Letter","Phrase","frase","lett","attemptsRemaining","incorrectUserGuess","length","matchWord","x","displayChar","phraseArr","initialCondition","correctUserGuess","console","log","nextWord","startGame","prompt","name","message","validate","str","regEx","RegExp","test","then","res","replace","type","default","game","process","exit"],"mappings":";;AA0CA;;;;;;AACA,IAAIA,WAAWC,QAAQ,UAAR,CAAf,C,CA3CA;AACA;AACC;AACA;AACD;AACC;AACA;AACA;AACD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAcA,IAAIC,SAASD,QAAQ,aAAR,CAAb;AACA,IAAIE,SAASF,QAAQ,aAAR,CAAb;AACA,IAAIG,QAAQ,IAAID,MAAJ,EAAZ;AACA,IAAIE,OAAO,IAAIH,MAAJ,EAAX;AACA,IAAII,oBAAoBD,KAAKE,kBAAL,CAAwBC,MAAhD;AACA,IAAIC,YAAY,EAAhB;AACA,IAAIC,IAAI,CAAR;;AAEAL,KAAKM,WAAL,CAAiB,EAAjB,EAAqBP,MAAMQ,SAAN,CAAgBF,CAAhB,CAArB;;AAEA,SAASG,gBAAT,GAA4B;AAC3B,KAAIR,KAAKS,gBAAL,CAAsBN,MAAtB,KAAiCC,UAAUD,MAA/C,EAAuD;AACtDO,UAAQC,GAAR,CAAY,YAAZ;AACAC;AACA,EAHD,MAGO,IAAIX,sBAAsB,CAA1B,EAA8B;AACpCS,UAAQC,GAAR,CAAY,uBAAZ;AACAE;AACA,EAHM,MAGA,IAAIZ,sBAAsB,CAA1B,EAA6B;AACnCS,UAAQC,GAAR,CAAY,qBAAZ;AACAE;AACA,EAHM,MAGA,IAAIZ,sBAAsB,EAA1B,EAA8B;AACpCS,UAAQC,GAAR,CAAY,oCAAoCZ,MAAMQ,SAAN,CAAgBF,CAAhB,CAAhD;AACAO;AACA,EAHM,MAGA,IAAIX,oBAAoB,CAApB,IAAyBA,oBAAoB,EAA7C,IAAmDD,KAAKS,gBAAL,CAAsBN,MAAtB,IAAgCJ,MAAMQ,SAAN,CAAgBF,CAAhB,EAAmBF,MAA1G,EAAkH;AACxHO,UAAQC,GAAR,CAAY,aAAZ;AACAE;AACA;AACD;;AAED,SAASA,SAAT,GAAqB;AACpBlB,UAASmB,MAAT,CAAgB,CACd;AACAC,QAAM,QADN;AAEAC,WAAS,iBAFT;AAGAC,YAAU,kBAASC,GAAT,EAAa;AACvB,OAAIC,QAAQ,IAAIC,MAAJ,CAAW,mBAAX,CAAZ;AACA,UAAOD,MAAME,IAAN,CAAWH,GAAX,CAAP;AACA;AANA,EADc,CAAhB,EASGI,IATH,CASQ,UAASC,GAAT,EAAa;AACpBvB,OAAKM,WAAL,CAAiBiB,IAAIvB,IAArB,EAA2BD,MAAMQ,SAAN,CAAgBF,CAAhB,CAA3B;AACAD,cAAYL,MAAMQ,SAAN,CAAgBF,CAAhB,EAAmBmB,OAAnB,CAA2B,cAA3B,EAA2C,EAA3C,CAAZ;AACAvB,sBAAoBD,KAAKE,kBAAL,CAAwBC,MAA5C;AACAK;AACA,EAdD;AAeA;;AAED,SAASI,QAAT,GAAoB;AACnBjB,UAASmB,MAAT,CAAgB,CACd;AACAC,QAAM,MADN;AAEAU,QAAM,SAFN;AAGAT,WAAS,oCAHT;AAIAU,WAAS;AAJT,EADc,CAAhB,EAOGJ,IAPH,CAOQ,UAASC,GAAT,EAAa;AACpB,MAAIA,IAAII,IAAJ,KAAa,IAAjB,EAAuB;AACtBtB;AACAL,QAAKE,kBAAL,GAA0B,EAA1B;AACAF,QAAKS,gBAAL,GAAwB,EAAxB;AACAR,uBAAoBD,KAAKE,kBAAL,CAAwBC,MAA5C;AACAH,QAAKM,WAAL,CAAiBiB,IAAIvB,IAArB,EAA2BD,MAAMQ,SAAN,CAAgBF,CAAhB,CAA3B;AACAG;AAEA,GARD,MAQO;AACNoB,WAAQC,IAAR;AACA;AAED,EApBD;AAqBA;;AAEDhB","file":"hangmanCli.js","sourcesContent":["//Include the inquirer module\n//create a constructor function for Word\n\t//Should be used to create an object of the current word that the user is guessing\n\t//\n//create a constructor function for Letter\n\t//used for each letter in the current word\n\t//each letter object should display an underlying character, or a blank placehold(such as an underscore),dending on whether the user has guessed the letter or not\n\t//this should contain letter specific logic and data\n//keep track of the user's remaining guesses and prompt the user if they would like to end the game if none remain\n//EACH CONSTRUCTOR FUNCTION SHOULD BE ITS OWN FILE AND BE EXPORTED AND REQUIRED WHEREEVER NEEDED\n//Make sure to use a couple of function prototypes for the constructor functions methods.\n\n// //word constructor function\n\n// randomWordChooser = () =>{\n// \trandomlySelectedWord = phraseCollectionArr[Math.floor(Math.random() * phraseCollectionArr.length)];\n// };\n// //still trying to wrap my head around es6 constructors\n// function GuessString(input){\n// \tthis.name = input;\n// \tthis.length = input.length;\n// };\n\n// GuessString.prototype.convertCharsToUnderscores = function() {\n// \tlet inputArr = this.name.split('');\n// \tfor (let i = 0; i < inputArr.length; i++){\n// \t\tinputArr[i] = inputArr[i].replace(/^[a-zA-Z0-9_.-]*$/, '_ ')\n// \t};\n// \tlet underscoreString = inputArr.join('');\n// \tconsole.log(underscoreString);\n// };\n\n\n\n\n\n\n\n\n\n\n\nimport fs from 'fs';\nlet inquirer = require('inquirer');\nlet Letter = require('./letter.js');\nlet Phrase = require('./phrase.js');\nlet frase = new Phrase();\nlet lett = new Letter();\nlet attemptsRemaining = lett.incorrectUserGuess.length;\nvar matchWord = \"\";\nvar x = 0;\n\nlett.displayChar(\"\", frase.phraseArr[x]);\n\nfunction initialCondition() {\n\tif (lett.correctUserGuess.length === matchWord.length) {\n\t\tconsole.log(\"You win!!!\");\n\t\tnextWord();\n\t} else if (attemptsRemaining === 0 ) {\n\t\tconsole.log(\"Welcome to HangmanCLI\");\n\t\tstartGame();\n\t} else if (attemptsRemaining === 9) {\n\t\tconsole.log(\"One guess Remaining\");\n\t\tstartGame();\n\t} else if (attemptsRemaining === 10) {\n\t\tconsole.log(\"Game Over... The guess word was\" + frase.phraseArr[x]);\n\t\tnextWord();\n\t} else if (attemptsRemaining > 0 && attemptsRemaining < 10 && lett.correctUserGuess.length != frase.phraseArr[x].length) {\n\t\tconsole.log(\"Guess again\");\n\t\tstartGame();\n\t};\n}\n\nfunction startGame() {\n\tinquirer.prompt([\n\t  {\n\t  name: 'letter',\n\t  message: 'Choose a letter',\n\t  validate: function(str){\n\t\t\tvar regEx = new RegExp(\"^[a-zA-Z\\s]{1,1}$\");\n\t\t\treturn regEx.test(str);\n\t\t}\n\t}\n\t]).then(function(res){\n\t\tlett.displayChar(res.lett, frase.phraseArr[x]);\n\t\tmatchWord = frase.phraseArr[x].replace(/(.)(?=.*\\1)/g, \"\");\n\t\tattemptsRemaining = lett.incorrectUserGuess.length;\n\t\tinitialCondition();\n\t});\n};\n\nfunction nextWord() {\n\tinquirer.prompt([\n\t  {\n\t  name: 'game',\n\t  type: 'confirm',\n\t  message: 'Do you want to play another round?',\n\t  default: true\n\t}\n\t]).then(function(res){\n\t\tif (res.game === true ){\n\t\t\tx++;\n\t\t\tlett.incorrectUserGuess = [];\n\t\t\tlett.correctUserGuess = [];\n\t\t\tattemptsRemaining = lett.incorrectUserGuess.length;\n\t\t\tlett.displayChar(res.lett, frase.phraseArr[x]);\n\t\t\tinitialCondition();\t\t\t\n\t\t\t\n\t\t} else {\n\t\t\tprocess.exit();\n\t\t};\n\t\t\n\t});\n}\n\nstartGame();\n\n\n\n\n\n\n\n\n\n\n"]}