{"version":3,"sources":["../game/letter.js"],"names":["Letter","inputLetter","phrase","character","correctUserGuessArr","incorrectUserGuessArr","prototype","displayChar","loggedPhrase","phraseArr","chr","push","indexOf","console","log","correctUserGuess","join"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAIA,SAAS,SAATA,MAAS,CAACC,WAAD,EAAcC,MAAd,EAAyB;AACpC,WAAKA,MAAL,GAAcA,MAAd;AACA,WAAKC,SAAL,GAAiBF,WAAjB;AACA,WAAKG,mBAAL,GAA2B,EAA3B;AACA,WAAKC,qBAAL,GAA6B,EAA7B;AACA,CALF;AAMAL,OAAOM,SAAP,CAAiBC,WAAjB,GAA+B,UAACN,WAAD,EAAcC,MAAd,EAAyB;AACvD,WAAKM,YAAL,GAAoB,EAApB;AACA,WAAKC,SAAL,GAAiB,EAAjB;;AAFuD;AAAA;AAAA;;AAAA;AAIvD,uBAAgBP,MAAhB,8HAAuB;AAAA,OAAdQ,GAAc;;AACtB,aAAKD,SAAL,CAAeE,IAAf,CAAoBD,GAApB;AACA;AANsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOvD,KAAK,UAAKN,mBAAL,CAAyBQ,OAAzB,CAAiCX,WAAjC,IAAgD,CAAC,CAAlD,IAAyD,UAAKI,qBAAL,CAA2BO,OAA3B,CAAmCX,WAAnC,IAAkD,CAAC,CAAhH,EAAoH;AACnHY,UAAQC,GAAR,CAAY,mDAAZ;AACA,EAFD,MAGK,IAAG,UAAKL,SAAL,CAAeG,OAAf,CAAuBX,WAAvB,MAAwC,CAAC,CAA5C,EAAgD;AACpD,YAAKG,mBAAL,CAAyBO,IAAzB,CAA8BV,WAA9B;AACA,EAFI,MAGA,IAAI,UAAKQ,SAAL,CAAeG,OAAf,CAAuBX,WAAvB,KAAuC,CAAC,CAA5C,EAA+C;AACnD,YAAKI,qBAAL,CAA2BM,IAA3B,CAAgCV,WAAhC;AACA;AAfsD;AAAA;AAAA;;AAAA;AAgBvD,wBAAgBC,MAAhB,mIAAuB;AAAA,OAAdQ,GAAc;;AACtB,OAAI,UAAKK,gBAAL,CAAsBH,OAAtB,CAA8BF,GAA9B,MAAuC,CAAC,CAA5C,EAAgD;AAC/C,cAAKF,YAAL,CAAkBG,IAAlB,CAAuB,UAAKF,SAAL,CAAeC,GAAf,CAAvB;AACA,IAFD,MAEO;AACN,cAAKF,YAAL,CAAkBG,IAAlB,CAAuB,IAAvB;AACA;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AA7BuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA8BvDE,SAAQC,GAAR,CAAY,UAAKN,YAAL,CAAkBQ,IAAlB,CAAuB,GAAvB,CAAZ;AACA,CA/BD;kBAgCehB,M","file":"letter.js","sourcesContent":["import fs from 'fs';\n\nlet Letter = (inputLetter, phrase) => {\n\t\tthis.phrase = phrase\n\t\tthis.character = inputLetter\n\t\tthis.correctUserGuessArr = []\n\t\tthis.incorrectUserGuessArr = []\n\t};\nLetter.prototype.displayChar = (inputLetter, phrase) => {\n\tthis.loggedPhrase = [];\n\tthis.phraseArr = [];\n\n\tfor (var chr of phrase){\n\t\tthis.phraseArr.push(chr);\n\t}\n\tif ((this.correctUserGuessArr.indexOf(inputLetter) > -1) || (this.incorrectUserGuessArr.indexOf(inputLetter) > -1) ){\n\t\tconsole.log('Letter already attempted, please try a new letter');\n\t}\n\telse if(this.phraseArr.indexOf(inputLetter) !== -1 ) {\n\t\tthis.correctUserGuessArr.push(inputLetter);\n\t} \n\telse if (this.phraseArr.indexOf(inputLetter) == -1) {\n\t\tthis.incorrectUserGuessArr.push(inputLetter);\n\t};\n\tfor (var chr of phrase){\n\t\tif( this.correctUserGuess.indexOf(chr) !== -1 ) {\n\t\t\tthis.loggedPhrase.push(this.phraseArr[chr]);\n\t\t} else {\n\t\t\tthis.loggedPhrase.push('_ ');\n\t\t};\n\t}\n\t// for( i = 0; i < this.phraseArr.length; i++) {\n\t// \tif( this.correctUserGuess.indexOf(i) !== -1 ) {\n\t// \t\tthis.loggedPhrase.push(this.phraseArr[i]);\n\t// \t} else {\n\t// \t\tthis.loggedPhrase.push('_ ');\n\t// \t};\n\t// };\n\tconsole.log(this.loggedPhrase.join(' ')); \n};\nexport default Letter;\n"]}